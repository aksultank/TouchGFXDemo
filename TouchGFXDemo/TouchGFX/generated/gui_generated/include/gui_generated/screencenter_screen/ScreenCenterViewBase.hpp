/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREENCENTERVIEWBASE_HPP
#define SCREENCENTERVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screencenter_screen/ScreenCenterPresenter.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/canvas/Shape.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/Button.hpp>

class ScreenCenterViewBase : public touchgfx::View<ScreenCenterPresenter>
{
public:
    ScreenCenterViewBase();
    virtual ~ScreenCenterViewBase() {}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Image image1;
    touchgfx::Shape<10> shape1;
    touchgfx::PainterRGB565 shape1Painter;
    touchgfx::Button buttonDown;
    touchgfx::Button buttonUp;
    touchgfx::Button buttonLeft;
    touchgfx::Button buttonRight;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ScreenCenterViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 4800;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // SCREENCENTERVIEWBASE_HPP
